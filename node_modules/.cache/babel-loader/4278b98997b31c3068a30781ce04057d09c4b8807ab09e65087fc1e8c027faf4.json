{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HCnet\\\\OneDrive\\\\\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD\\\\KameeAWS\\\\Weather\\\\src\\\\WeatherForecast.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherForecast(props) {\n  _s();\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n  function load() {\n    let longitude = props.coordinates.lon;\n    let latitude = props.coordinates.lat;\n    const apiURL = 'https://paigtite29.execute-api.us-east-1.amazonaws.com/prod/forecast';\n    axios.post(apiURL, {\n      long: longitude,\n      lat: latitude\n    }, Headers = {\n      'Content-Type': 'application/json',\n      'x-api-key': 'lSGGHgvXhV3met2ibHhiY9LUc6xtuAFD7K6U5ccT',\n      \"Access-Control-Allow-Origin\": \"*\"\n    }).then(handleResponse);\n  }\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherForecast\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: forecast.map(function (dailyForecast, index) {\n          if (index < 5) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(WeatherForecastDay, {\n                data: dailyForecast\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this);\n          } else {\n            return null;\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  } else {\n    load();\n    return null;\n  }\n}\n_s(WeatherForecast, \"kLNsBjMbwg/21mEy29QJZwMPCGo=\");\n_c = WeatherForecast;\nvar _c;\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"names":["React","useState","useEffect","axios","WeatherForecastDay","jsxDEV","_jsxDEV","WeatherForecast","props","_s","loaded","setLoaded","forecast","setForecast","coordinates","handleResponse","response","data","daily","load","longitude","lon","latitude","lat","apiURL","post","long","Headers","then","className","children","map","dailyForecast","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HCnet/OneDrive/מסמכים/KameeAWS/Weather/src/WeatherForecast.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\n\nexport default function WeatherForecast(props) {\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  function load() {\n    let longitude = props.coordinates.lon;\n    let latitude = props.coordinates.lat;\n    const apiURL = 'https://paigtite29.execute-api.us-east-1.amazonaws.com/prod/forecast';\n    axios.post(apiURL, { long: longitude, lat: latitude}, Headers = { 'Content-Type': 'application/json', 'x-api-key': 'lSGGHgvXhV3met2ibHhiY9LUc6xtuAFD7K6U5ccT', \"Access-Control-Allow-Origin\": \"*\" }).then(handleResponse);\n  }\n\n  if (loaded) {\n    return (\n      <div className=\"WeatherForecast\">\n        <div className=\"row\">\n          {forecast.map(function (dailyForecast, index) {\n            if (index < 5) {\n              return (\n                <div className=\"col\" key={index}>\n                  <WeatherForecastDay data={dailyForecast} />\n                </div>\n              );\n            } else {\n              return null;\n            }\n          })}\n        </div>\n      </div>\n    );\n  } else {\n    load();\n\n    return null;\n  }\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,eAAe,SAASC,eAAeA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC7C,IAAI,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACzC,IAAI,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdS,SAAS,CAAC,KAAK,CAAC;EAClB,CAAC,EAAE,CAACH,KAAK,CAACM,WAAW,CAAC,CAAC;EAEvB,SAASC,cAAcA,CAACC,QAAQ,EAAE;IAChCH,WAAW,CAACG,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC;IAChCP,SAAS,CAAC,IAAI,CAAC;EACjB;EAEA,SAASQ,IAAIA,CAAA,EAAG;IACd,IAAIC,SAAS,GAAGZ,KAAK,CAACM,WAAW,CAACO,GAAG;IACrC,IAAIC,QAAQ,GAAGd,KAAK,CAACM,WAAW,CAACS,GAAG;IACpC,MAAMC,MAAM,GAAG,sEAAsE;IACrFrB,KAAK,CAACsB,IAAI,CAACD,MAAM,EAAE;MAAEE,IAAI,EAAEN,SAAS;MAAEG,GAAG,EAAED;IAAQ,CAAC,EAAEK,OAAO,GAAG;MAAE,cAAc,EAAE,kBAAkB;MAAE,WAAW,EAAE,0CAA0C;MAAE,6BAA6B,EAAE;IAAI,CAAC,CAAC,CAACC,IAAI,CAACb,cAAc,CAAC;EAC3N;EAEA,IAAIL,MAAM,EAAE;IACV,oBACEJ,OAAA;MAAKuB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BxB,OAAA;QAAKuB,SAAS,EAAC,KAAK;QAAAC,QAAA,EACjBlB,QAAQ,CAACmB,GAAG,CAAC,UAAUC,aAAa,EAAEC,KAAK,EAAE;UAC5C,IAAIA,KAAK,GAAG,CAAC,EAAE;YACb,oBACE3B,OAAA;cAAKuB,SAAS,EAAC,KAAK;cAAAC,QAAA,eAClBxB,OAAA,CAACF,kBAAkB;gBAACa,IAAI,EAAEe;cAAc;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC,GADnBJ,KAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAE1B,CAAC;UAEV,CAAC,MAAM;YACL,OAAO,IAAI;UACb;QACF,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC,MAAM;IACLlB,IAAI,CAAC,CAAC;IAEN,OAAO,IAAI;EACb;AACF;AAACV,EAAA,CA3CuBF,eAAe;AAAA+B,EAAA,GAAf/B,eAAe;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}